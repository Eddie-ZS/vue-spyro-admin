{
	"files.eol": "\n", // 文件结束符
	"eslint.format.enable": true, // 开启保存时自动修复
	"editor.codeLens": true, // 显示行号
	"editor.tabSize": 2, // 重新设定tabsize
	"editor.detectIndentation": false, // 禁用自动检测缩进
	// 将prettier设置为默认格式化程序(在编辑器中有可能被其他Formatter占用，所以将prettier设置为默认Formatter)
	"editor.defaultFormatter": "esbenp.prettier-vscode",
	// 关闭js/ts的默认format,统一用eslint进行格式化（tslint已经不维护了，所以转eslint吧）
	"javascript.format.enable": false,
	"typescript.format.enable": false,
	// 保存时自动格式化 (根据根目录下‘.prettierrc文件配置项’)
	"editor.formatOnSave": true,
	// Enable per-language
	"[html]": {
		"editor.defaultFormatter": "vscode.html-language-features",
		"editor.formatOnSave": true
	},
	"[vue]": {
		"editor.formatOnSave": true, // 交给 eslint
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[javascript]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	// 什么类型的文件需要遵守stylelint规则
	"stylelint.validate": ["css", "less", "scss", "sass", "vue"],
	// 为ESLint启用“保存时自动修复”，并且仍然具有格式和快速修复功能
	"editor.codeActionsOnSave": {
		"source.fixAll": "always",
		"source.fixAll.stylelint": "always"
	},
	"[markdown]": {
		"editor.defaultFormatter": null,
		"editor.formatOnSave": false
	},
	"[json]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[typescript]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[scss]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"i18n-ally.localesPaths": ["locales"], // 翻译文件(json/yaml)路径 (自动生成) 相对于项目根目录的语言环境目录路径
	"i18n-ally.keystyle": "nested", // 翻译路径格式 (变量对象格式 nested：嵌套式  flat:扁平式)
	"i18n-ally.readonly": false, // 翻译文件是否只读
	"i18n-ally.sortKeys": true, // 字母顺序排序
	"i18n-ally.namespace": true, // 开启命名空间
	"i18n-ally.keepFulfilled": true, // 始终用空字符串填充所有的键
	"i18n-ally.enabledParsers": ["json", "yaml"], // 翻译文件可允许的格式，默认json
	"i18n-ally.sourceLanguage": "zh_CN", // 翻译源语言
	"i18n-ally.displayLanguage": "zh_CN", //显示语言， 这里也可以设置显示英文为en
	// 翻译引擎
	"i18n-ally.translate.engines": ["google-cn", "google", "deepl"],
	"i18n-ally.extract.keygenStyle": "camelCase", // 翻译字段命名样式采用驼峰
	"i18n-ally.enabledFrameworks": ["vue"] // 指定要使用的框架。 如果未设置值，扩展将自动检测框架
}
